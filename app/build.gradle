import static org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS
import static org.apache.tools.ant.taskdefs.condition.Os.isFamily

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

def keyConfigPath
if (isFamily(FAMILY_WINDOWS)) {
    keyConfigPath = System.getenv('USERPROFILE') + File.separator + "Desktop" + File.separator +
            "debug.keystore.properties"
} else {
    keyConfigPath = System.getenv('HOME') + File.separator + "Desktop" + File.separator +
            "debug.keystore.properties"
}
Properties props = new Properties()
if (new File(keyConfigPath).exists()) {
    props.load(new FileInputStream(file(keyConfigPath)))
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        applicationId "com.github.piasy.okbuck.example"
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        multiDexEnabled true
        versionCode 1
        versionName "1.0"

        // ---> android_build_config --> 作为: android_library 的一个依赖
        buildConfigField "boolean", "CAN_JUMP", "true"
        buildConfigField "boolean", "XLOG_ENABLED", "true"
        buildConfigField "int", "EXOPACKAGE_FLAGS", "0"
    }

    signingConfigs {
        // comment this off for ci
        /*debug {
            // you can set secrete like this to avoid expose your secrete in build.gradle
            storeFile file(props['key.store'])
            storePassword props['key.store.password']
            keyAlias props['key.alias']
            keyPassword props['key.alias.password']
        }*/

        release {
            // or just set values directly
            storeFile file('../debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    // 定义了: App的Flavors, 在: src目录下存在多个不同的子目录: main, dev, prod, demo(似乎不存在)
    //
    productFlavors {
        dev {
            buildConfigField "boolean", "CAN_JUMP", "true"
        }
        prod {
            buildConfigField "boolean", "CAN_JUMP", "false"
        }
        demo {
            buildConfigField "boolean", "CAN_JUMP", "false"
        }
    }

    // buildTypes
    // app_dev_debug
    // app_dev_release
    //
    buildTypes {
        debug {
            buildConfigField "boolean", "DEBUG_CONFIG", "true"
            signingConfig signingConfigs.release
        }
        release {
            buildConfigField "boolean", "CAN_JUMP", "true"
            buildConfigField "boolean", "DEBUG_CONFIG", "false"
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 这是什么东西?
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:multidex:1.0.1'
    compile 'com.jakewharton:butterknife:7.0.1'

    compile ('com.android.support:design:23.1.1') {
        exclude module: 'appcompat-v7'
    }
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile "com.squareup.leakcanary:leakcanary-android:1.3.1"
    // no this combination
    //devReleaseCompile "com.squareup.leakcanary:leakcanary-android:1.3.1"

    apt 'com.google.dagger:dagger-compiler:2.0.1'
    devCompile project(path: ':dummylibrary', configuration: 'freeRelease')
    prodCompile project(path: ':dummylibrary', configuration: 'paidRelease')
    compile project(':libraries:emptylibrary')

    compile 'com.github.promeg:xlog-android-idle:2.1.1'
    //debugCompile 'com.github.promeg:xlog-android:2.1.1'
    //debugCompile 'com.github.promeg:xlog-compiler:2.1.1'

    //releaseCompile 'com.github.promeg:xlog-android-idle:2.1.1'

    testCompile project(path: ':dummylibrary', configuration: 'freeDebug')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
}
